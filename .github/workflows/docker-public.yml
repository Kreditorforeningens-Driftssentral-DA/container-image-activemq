---
name: Docker Public (GitHub)

on:
  workflow_dispatch:

  schedule:
  - cron: '30 0 15 * *' # https://crontab.guru/#30_0_15_*_*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    
    permissions:
      packages: write
      contents: read

    strategy:
      fail-fast: true
      matrix:
        java_version:
        - '11'
        #- '8'
        activemq_version:
        - '5.16.3'
        - '5.15.15'

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Get date
      id: timestamp
      run: |
        echo "::set-output name=date::$(date +'%Y-%m-%d')"
        echo "::set-output name=week::$(date +'%Y.%V')"
    -
      name: Login to Registry (GitHub)
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        flavor: |
          latest=auto
          prefix=${{ matrix.java_version }}-,onlatest=true
        tags: |
          type=raw,value=${{ matrix.activemq_version }}-${{ steps.timestamp.outputs.week }}
          type=raw,value=${{ matrix.activemq_version }}
        labels: |
          no.kred.image.maintainer='Kreditorforeningen'
          no.kred.image.vendor='Kreditorforeningen'
          no.kred.image.title='ActiveMQ (Classic)'
          no.kred.image.description='ActiveMQ (Classic) Container Image'
          no.kred.image.timestamp="${{ steps.timestamp.outputs.date }}"
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: docker
        file: "docker/Dockerfile.public"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          IMAGE_NAME=azul/zulu-openjdk-debian
          IMAGE_TAG=${{ matrix.java_version }}
          ACTIVEMQ_VERSION=${{ matrix.activemq_version }}
          HAWTIO_VERSION=2.14.4
          JDBC_VERSION=42.3.1
